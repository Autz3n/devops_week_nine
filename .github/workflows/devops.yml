name: DevOps Pipeline

on:
  push:
    branches:
      - main
  
permissions:
  contents: write
  packages: write

jobs:
  delivery:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Application Version
        id: semver-app
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true
          
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and Push Docker image
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          docker build \
            -t ghcr.io/$REPO_NAME:staging \
            -t ghcr.io/$REPO_NAME:${{ steps.semver-app.outputs.version }} \
            -f DevOpsWebApplication/Dockerfile \
            .
          docker push ghcr.io/$REPO_NAME --all-tags
          
      - name: Create release notes 
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.semver-app.outputs.version }}
          generateReleaseNotes: true
          body: |
            This release includes the following container image: 
            https://ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version }} 
            
      - name: Deliver Docker Compose file to staging
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          source: "docker-compose.yaml"
          target: dowa/
        
      - name: Run Docker Compose on staging server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }} 
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          script: |
            cd dowa
            docker compose pull 
            docker compose up -d
            
  deployment:
    needs: delivery
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Application Version
        id: semver-app
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true 

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # Dette kan sagtens fungere, men det kommer med en lille risiko :) Principielt kunne softwaren være ændret mellem den blev bygget til staging og produktion.
      # Derfor kan en anden tilgang være, at "forfremme" det eksisterende staging-image til at være produktionsklar.
      # Det kan gøres med følgende kode:
      # 
      #  - name: Promote Docker Image
      #  run: |
      #    docker pull ghcr.io/${{ github.repository }}:staging
      #    docker tag ghcr.io/${{ github.repository }}:staging ghcr.io/${{ github.repository }}:production
      #    docker push ghcr.io/${{ github.repository }} --all-tags
      #
      - name: Pull docker image
        run: |
          docker pull ghcr.io/${{ github.repository }}:${{ steps.semver-app.outputs.version }}
          
      - name: Deliver Docker Compose File
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          source: "docker-compose.yaml"
          target: dowa/
          
      - name: Deploy
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.PRODUCTION_SERVER_IP }}
          username: ${{ vars.PRODUCTION_SERVER_USERNAME }}
          key: ${{ secrets.PRODUCTION_SERVER_SSH_KEY }}
          script: |
            cd dowa
            docker compose pull 
            docker compose up -d